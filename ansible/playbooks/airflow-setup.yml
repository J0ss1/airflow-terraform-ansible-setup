---
- name: Setup Airflow with Docker
  hosts: airflow
  become: yes
  vars:
    airflow_user_id: "50000"
    airflow_group_id: "50000"
  tasks:
    - name: Install required packages
      dnf:
        name:
          - python3-pip
          - python3-devel
          - firewalld
          - policycoreutils-python-utils # for SELinux
        state: present

    - name: Add Docker repo
      get_url:
        url: https://download.docker.com/linux/centos/docker-ce.repo
        dest: /etc/yum.repos.d/docker-ce.repo

    - name: Install Docker packages
      dnf:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: present

    - name: Install Python requirements
      pip:
        name:
          - "docker==6.1.3"
          - "requests>=2.31.0"
        state: present
      become: yes
      become_user: "{{ ansible_user }}"

    - name: Start and enable services
      systemd:
        name: "{{ item }}"
        state: started
        enabled: yes
        daemon_reload: yes
      with_items:
        - docker
        - firewalld

    - name: Configure firewall
      firewalld:
        port: 8080/tcp
        permanent: yes
        state: enabled
      notify: Reload firewall

    - name: Add user to docker group
      user:
        name: "{{ ansible_user }}"
        groups: docker
        append: yes

    - name: Create Airflow directory structure
      file:
        path: "{{ item }}"
        state: directory
        owner: "{{ airflow_user_id }}"
        group: "{{ airflow_group_id }}"
        mode: '0775'
        recurse: yes
      with_items:
        - "{{ airflow_home }}"
        - "{{ airflow_home }}/dags"
        - "{{ airflow_home }}/logs"
        - "{{ airflow_home }}/plugins"
        - "{{ airflow_home }}/config"

    - name: Copy DAG files
      copy:
        src: "../files/dags/"
        dest: "{{ airflow_home }}/dags/"
        owner: "{{ airflow_user_id }}"
        group: "{{ airflow_group_id }}"
        mode: '0644'

    - name: Create and set permissions for airflow.db
      file:
        path: "{{ airflow_home }}/airflow.db"
        state: touch
        owner: "{{ airflow_user_id }}"
        group: "{{ airflow_group_id }}"
        mode: '0666'

    - name: Set SELinux context for Airflow directories
      sefcontext:
        target: '{{ airflow_home }}(/.*)?'
        setype: container_file_t
        state: present
      register: se_context

    - name: Apply new SELinux context
      command: restorecon -R {{ airflow_home }}
      when: se_context.changed

    - name: Create docker-compose.yml
      template:
        src: "../templates/docker-compose.yml.j2"
        dest: "{{ airflow_home }}/docker-compose.yml"
        mode: '0644'

    - name: Start Airflow containers
      command: docker compose up -d
      args:
        chdir: "{{ airflow_home }}"

  handlers:
    - name: Reload firewall
      systemd:
        name: firewalld
        state: reloaded